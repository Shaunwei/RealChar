name: Build Web Image and Release to Production

on:
  push:
    tags:
      - web-prod-**

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: add env IMAGE_NAME to keep it lowercase
        run: |
          echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}-web-prod" >>${GITHUB_ENV}

      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=match,pattern=web-prod-(.*),group=1

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./client/next-web
          file: ./client/next-web/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NEXT_PUBLIC_RC_BUILD_NUMBER=${{ steps.meta.outputs.version }}
            NEXT_PUBLIC_FIREBASE_API_KEY=AIzaSyAVqhwbdB8I56HAMVVlgJKZcfrBkKI2AhQ
            NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=assistly-kubernetes.firebaseapp.com
            NEXT_PUBLIC_FIREBASE_PROJECT_ID=assistly-kubernetes
            NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=assistly-kubernetes.appspot.com
            NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=806733379891
            NEXT_PUBLIC_FIREBASE_APP_ID=1:806733379891:web:48bf124c0d9b90298e6646
            NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=G-XVWF8XDKS5
            API_HOST=https://api.realchar.ai
            NEXT_PUBLIC_API_HOST=https://api.realchar.ai
            NEXT_PUBLIC_TURN_SERVER_API_ENDPOINT=https://testrtcturn.metered.live/api/v1/turn/credentials?apiKey=1061f118b12c30023acb17aafcf8c224c8f1

            
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS_ASSISTLY }}'

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: 'rc-prod'
          location: 'us-central1'

      - id: 'deploy-to-cluster'
        env:
          IMAGE_TAG: ${{ steps.meta.outputs.version }}
        run: 'kubectl set image deployment/deployment-rc-frontend app-rc-frontend=$REGISTRY/$IMAGE_NAME:$IMAGE_TAG'

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: '#335c05'
          SLACK_MESSAGE: realchar.ai -- ${{ github.event.head_commit.message }}
          SLACK_TITLE: web -> ${{ steps.meta.outputs.version }}
          SLACK_FOOTER: realchar.ai
          MSG_MINIMAL: true
          SLACK_WEBHOOK: https://hooks.slack.com/services/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


      # - name: Deploy to Kubernetes
      #   run: |
      #     echo "${{ secrets.KUBECONFIG }}" | base64 --decode > ./kubeconfig.yaml
      #     export KUBECONFIG=./kubeconfig.yaml
      #     kubectl rollout restart deployment react-next-deployment
