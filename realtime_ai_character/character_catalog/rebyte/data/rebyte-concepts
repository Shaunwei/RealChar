ReByte Concepts

LLM Serverless Callable

LLM Serverless Callable is a piece of sequential actions that can be executed on the LLM serverless runtime. It is the core building block of ReByte, and the main way for end users to create their own tools. Rebyte provides a GUI builder for end users to create/edit their own LLM callables. Rebyte provides a list of pre-built actions for common use cases, also private SDK for software engineer to build their own actions, and seamlessly integrate with the callable builder. Pre-built actions includes:

LLM Actions
Language Model Completion Interface
Language Model Chat Interface

Data Actions
Dataset Loader, load pre defined datasets for later processing
File Loader, extract/transform/load user's provided files
Semantic Search, search for similar content over user's knowledge base

Tools Actions
Search Engine, search for information on Google/Bing
Web Crawler, crawl web pages and extract information
Http Request Maker, make any http request to any public/private API

Control flow Actions
Loop Until, run actions until a condition is met
Parallel, execute multiple actions in parallel
Vanilla Javascript, execute any vanilla javascript code, useful for doing pure data transformation

Customized JsBundle(private beta)
Software engineer can build their own JsBundle and submit to ReByte Action MarketPlace, so that end users can use it in their callables. JsBundle can use any npm packages, so greatly expand the capability of LLM callables.

Knowledge

Knowledge is private data that is stored in rebyte managed vector database. Rebyte currently provides following connectors for end users to import their knowledge:

Local file, supported file types are:
"doc",
  "docx",
  "img",
  "epub",
  "jpeg",
  "jpg",
  "png",
  "xls",
  "xlsx",
  "ppt",
  "pptx",
  "md",
  "txt",
  "rtf",
  "rst",
  "pdf",
  "json",
  "html",

Notion

Discord

GitHub

More connectors are coming soon

Knowledge can be used in LLM callables to do semantic search, or to do data augmentation. A great example is to use knowledge to do semantic search on a user's private knowledge base, and use the search result to do data augmentation for a language model, aka Retrieval Augmented Generation.

Copilot

Copilot is the end user facing part of rebyte, it is a universal UI interface/protocol that allows user to wire up LLM callables and knowledge to create their own tools.

Conversational based chat interface

Available on all major platforms, Web and Mobile.

Support long term memory out of the box, so that user can have a persistent conversation with the copilot.

ReByte Runtime

description: >-
  ReByte is a serial of infrastructure that enables end users to create their own AI tools without the need for a data science or engineering background.

￼
 Welcome to ReByte

End User Programming

In past decades, the software industry has been dominated by a small group of people who have the ability to write code, a user has to be 'techie' just to open a terminal and start writing code.  The recent emergence of LLM in the software industry will bring about a monumental transformation. First LLM provides a vehicle for every software to use LLM as human intention understanding. Secondly LLM provides a tool for every end user to write small piece of code without learning how to do traditional programming. Soon all normal computer users will have the ability to develop small software tools from scratch by describing what the software looks like and to describe modifications they’d like made to software they’re already using.

This will open the hood of software development to a much larger group of people, every person can use their personal computers to create their personal software tools. Every company can use their private data to create their personal software tools for internal or external uses.

ReByte is built with above mission in mind: to empower end users to create their own tools without the need for a data science or engineering background.

Also, ReByte is built to solve following problems in LLM application development:

Iterative Nature of LLM Development: Create tool on top of modern LLM models can be quite a challenge process, due to the nature of LLM models. LLM outputs are not deterministic, and the model performance can vary from time to time. ReByte's LLM callable builder is built to make this process as painless as possible.

Provide a unified interface for end users to test, evaluate and deploy their LLM application.

Log every single step of the LLM application, so that end users can easily trace what went wrong.

Painless Private Data integration: Today's LLM tools heavily rely on private data. Framework such as Langchain and LlamaIndex, together with various vector databases, provide all necessary pieces for private data embedding and search. But as an end user, he still needs to figure out how to wire everything up to make it work, it requires tremendous engineer expertness to do it. We want to make sure that the data integration process is as painless as possible.

Provide a hosted solution for end users to import from popular data sources, such as Notion, Google, GitHub, etc., as well as from user's local computer.
Handle data source synchronization automatically, so that end users don't need to worry about data consistency.

Production Serving Ready: Provide a robust runtime ready for immediate deployment and scalable growth.

LLM application could be hard to scale, due to its unpredictable and asynchronous nature.
By borrowing the idea of serverless function, we provide a scalable runtime for end users to scale their LLM application without worrying about the underlying infrastructure.

Get Started